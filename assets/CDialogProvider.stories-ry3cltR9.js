import{r as l,d as f,v as D,x as h,h as p}from"./vue.esm-bundler-D4RNtN6S.js";import{_ as P}from"./CButton-CYpEF-bO.js";import{C as w}from"./CDialog-Mu6wDJNg.js";import{C as u}from"./CShortList--0dsdfvU.js";import"./Button-CF0RFvFf.js";import"./use-rtl-DB_faxJd.js";import"./light-DsB5ODev.js";import"./browser-DLIXj5nt.js";import"./is-browser-DqcmxZSF.js";import"./icon-switch.cssr-CS-aOSlJ.js";import"./resolve-slot-BBjw-So6.js";import"./use-style-DC-6GAXR.js";import"./FadeInExpandTransition-LhRfDe22.js";import"./Loading-Ch5S3HjA.js";import"./use-memo-CglecHn5.js";import"./use-form-item-BaX4b55j.js";import"./light-CaBpc4YN.js";import"./use-css-vars-class-BoK1eXI1.js";import"./color-to-class-B0iQgAn2.js";import"./call-f2ri57Kd.js";import"./CTile-Cv4kNu6I.js";import"./CSkeleton-BQgGCk3S.js";import"./CIcon-BdIW6TD_.js";import"./_plugin-vue_export-helper-DlAUqK2U.js";import"./CCloseButton-Cu-pxIpa.js";import"./CSpin-PilhVice.js";import"./fade-in.cssr-DJOFltAV.js";import"./light-cVvDERhS.js";import"./index-Xn0jilRV.js";import"./use-compitable-B7ANSQOo.js";import"./light-Du_kP9Wc.js";import"./light-RknvjviJ.js";import"./Close-MwAQiULY.js";import"./Icon-CrmNSR1a.js";import"./Close-DtvJwW5M.js";import"./replaceable-DM1aDluB.js";import"./upperFirst-CgVWOQVP.js";import"./toString-Vm_cEZ4d.js";import"./keysOf-HiGXOwLp.js";import"./render-CafAiG2R.js";import"./Success-Dpq3D3vw.js";import"./Warning-Cd2ybYWr.js";import"./index-CIE75m1q.js";import"./delegate-AmuGJuoF.js";import"./get-first-slot-vnode-BHWfc99-.js";import"./flatten-B94A2huW.js";import"./Scrollbar-BbWWFAp8.js";import"./VResizeObserver-DllAtjZA.js";import"./get-precise-event-target-DhO46Lpt.js";import"./index-Bg4fAuci.js";import"./index-L98eAIry.js";import"./keep-B1eBS8j0.js";import"./fade-in-scale-up.cssr-DKJ6UU5J.js";import"./utils-Dy8q55w_.js";import"./index-DsSU6HIH.js";import"./CCollapseTransition-Dr-u_SKe.js";import"./fade-in-height-expand.cssr-BiZZSMP_.js";import"./light-C7NmY139.js";function*x(){let t=1;for(;;)yield String(t),t++}const C=x();function y(){return C.next().value}function N(){const t=l([]);function r(o){const e=l({id:y(),isShown:!1,...o});return setTimeout(()=>{e.value.isShown=!0}),t.value.push(e),e}function n(o){const e=t.value.findIndex(i=>i.value.id===o);e!==-1&&t.value.splice(e,1)}return()=>({dialogs:t,createDialog:r,removeDialog:n})}const g=N(),m=f({__name:"CDialogProvider",setup(t){const{dialogs:r,removeDialog:n}=g(),o=()=>r.value.map(e=>p(w,{key:e.value.id,type:e.value.type,isShown:e.value.isShown,negativeHandler:e.value.negativeHandler,positiveHandler:e.value.positiveHandler,iconName:e.value.iconName,isLoading:e.value.isLoading,isProcessing:e.value.isProcessing,onAfterLeave:()=>{n(e.value.id)},"onUpdate:isShown":i=>{e.value.isShown=i},hasNegative:e.value.hasNegative,hasPositive:e.value.hasPositive,isPositiveProcessing:e.value.isPositiveProcessing,isNegativeProcessing:e.value.isNegativeProcessing,isPositiveDisabled:e.value.isPositiveDisabled,isNegativeDisabled:e.value.isNegativeDisabled,isNegativeDisabledWhenPositiveProcessing:e.value.isNegativeDisabledWhenPositiveProcessing},{title:e.value.title?()=>{var i,s;return typeof e.value.title=="string"?e.value.title:(s=(i=e.value).title)==null?void 0:s.call(i)}:void 0,default:e.value.content?()=>{var i,s;return typeof e.value.content=="string"?e.value.content:(s=(i=e.value).content)==null?void 0:s.call(i)}:void 0,"positive-text":e.value.positiveText?()=>e.value.positiveText:void 0,"negative-text":e.value.negativeText?()=>e.value.negativeText:void 0}));return(e,i)=>(h(),D(o))}});m.__docgenInfo={exportName:"default",displayName:"CDialogProvider",description:"",tags:{},sourceFiles:["/home/runner/work/npm-pew-pew/npm-pew-pew/src/components/CDialogProvider/CDialogProvider.vue"]};const Te={title:"Components/DialogProvider",component:m,tags:["autodocs"],parameters:{docs:{description:{component:"A provider component for managing multiple dialogs in your application. It integrates with the useDialog composable to render and control CDialog instances dynamically, supporting custom content, handlers, and dialog states."}}},render:t=>({components:{CDialogProvider:m,CButton:P,CShortList:u},setup(){const{createDialog:r}=g(),n=()=>new Promise(e=>{setTimeout(e,500)});return{args:t,showDialog:()=>{r({type:"error",iconName:"trash",title:"Confirm Deletion",content:()=>[p("div",{style:"margin-bottom: 8px"},"You are about to delete the following 8 users"),p(u,{list:["Skywalker123","CodeNinja","PixelMaster","QuantumFox","NeonTiger","CyberHawk","ShadowWolf","BlazeStorm"],itemKey:e=>e,size:"medium",style:"margin-bottom: 8px"}),"Are you sure you would like to proceed?"],positiveText:"Confirm Deletion",negativeText:"Abort immediately!!!",positiveHandler:()=>n()})}}},template:`
      <CButton @click="showDialog">Open Dialog</CButton>
      <CDialogProvider/>
    `})},a={};var v,c,d;a.parameters={...a.parameters,docs:{...(v=a.parameters)==null?void 0:v.docs,source:{originalSource:"{}",...(d=(c=a.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};const Be=["Default"];export{a as Default,Be as __namedExportsOrder,Te as default};
