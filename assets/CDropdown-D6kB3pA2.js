import{d,v as i,y as l,z as u,A as s,x as p,m as f}from"./vue.esm-bundler-D4RNtN6S.js";import{N as m}from"./Dropdown-D7LC012C.js";const c=d({__name:"CDropdown",props:{options:{},animated:{type:Boolean,default:!0},inverted:{type:Boolean,default:!1},childrenField:{default:"children"},keyboard:{type:Boolean,default:!0},keyField:{default:"key"},labelField:{default:"label"},nodeProps:{type:Function,default:void 0},menuProps:{type:Function,default:void 0},renderIcon:{type:Function,default:void 0},renderLabel:{type:Function,default:void 0},renderOption:{type:Function,default:void 0},size:{default:"medium"},trigger:{default:"click"},show:{type:Boolean,default:void 0},placement:{default:void 0}},emits:["clickoutside","select"],setup(y,{emit:t}){const a=t;return(e,n)=>(p(),i(s(m),u({class:"c-dropdown"},e.$attrs,{options:e.options,animated:e.animated,inverted:e.inverted,"children-field":e.childrenField,keyboard:e.keyboard,"key-field":e.keyField,"label-field":e.labelField,"node-props":e.nodeProps,"menu-props":e.menuProps,"render-icon":e.renderIcon,"render-label":e.renderLabel,"render-option":e.renderOption,size:e.size,trigger:e.trigger,show:e.show,placement:e.placement,onClickoutside:n[0]||(n[0]=o=>a("clickoutside",o)),onSelect:n[1]||(n[1]=(o,r)=>a("select",o,r))}),{default:l(()=>[f(e.$slots,"default")]),_:3},16,["options","animated","inverted","children-field","keyboard","key-field","label-field","node-props","menu-props","render-icon","render-label","render-option","size","trigger","show","placement"]))}});c.__docgenInfo={exportName:"default",displayName:"CDropdown",description:"",tags:{},props:[{name:"options",description:`The array of dropdown options.
Can include different types like options, groups, dividers, or custom render options.`,required:!0,type:{name:"Array",elements:[{name:"union",elements:[{name:"DropdownOption"},{name:"DropdownGroupOption"},{name:"DropdownDividerOption"},{name:"DropdownRenderOption"}]}]}},{name:"animated",description:"Whether to use an animation when showing dropdown options.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"inverted",description:"Whether to apply the inverted style to the dropdown.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"childrenField",description:"Field name for children options in grouped dropdowns.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'children'"}},{name:"keyboard",description:`Whether the dropdown supports keyboard operation.
Note: Be cautious about conflicts with other components that handle keyboard input.`,required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"keyField",description:"Field name for the unique key of each dropdown option.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'key'"}},{name:"labelField",description:"Field name for the label of dropdown options.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'label'"}},{name:"nodeProps",description:"A function to generate HTML attributes for dropdown options.",required:!1,type:{name:"NodeProps"},defaultValue:{func:!1,value:"undefined"}},{name:"menuProps",description:"A function to generate HTML attributes for the dropdown menu.",required:!1,type:{name:"DropdownMenuProps"},defaultValue:{func:!1,value:"undefined"}},{name:"renderIcon",description:"Function to render icons for dropdown options.",required:!1,type:{name:"TSFunctionType"},defaultValue:{func:!1,value:"undefined"}},{name:"renderLabel",description:"Function to render labels for dropdown options.",required:!1,type:{name:"TSFunctionType"},defaultValue:{func:!1,value:"undefined"}},{name:"renderOption",description:"Function to render the entire dropdown option node.",required:!1,type:{name:"TSFunctionType"},defaultValue:{func:!1,value:"undefined"}},{name:"size",description:"The size of the dropdown component.",required:!1,type:{name:"union",elements:[{name:'"small"'},{name:'"medium"'},{name:'"large"'},{name:'"huge"'}]},defaultValue:{func:!1,value:"'medium'"}},{name:"trigger",description:"The trigger for dropdown.",required:!1,type:{name:"union",elements:[{name:'"click"'},{name:'"hover"'},{name:'"focus"'},{name:'"manual"'}]},defaultValue:{func:!1,value:"'click'"}},{name:"show",description:"Show dropdown flag when manual trigger is selected",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"undefined"}},{name:"placement",required:!1,type:{name:"union",elements:[{name:'"top"'},{name:'"bottom"'},{name:'"left"'},{name:'"right"'},{name:'"top-start"'},{name:'"top-end"'},{name:'"left-start"'},{name:'"left-end"'},{name:'"right-start"'},{name:'"right-end"'},{name:'"bottom-start"'},{name:'"bottom-end"'}]},defaultValue:{func:!1,value:"undefined"}}],events:[{name:"clickoutside",type:{names:["MouseEvent"]},description:"Triggered when a click occurs outside of the dropdown."},{name:"select",type:{names:["string"]},description:"Triggered when an option is selected in the dropdown."}],slots:[{name:"default"}],sourceFiles:["/home/runner/work/npm-pew-pew/npm-pew-pew/src/components/CDropdown/CDropdown.vue"]};export{c as _};
