import{f as x}from"./index-BOnq2-IM.js";import{d as k,h as p,b as D,c as h,t as y,r as I,p as F,v as U,y as d,z as E,A as M,x as W,m as v}from"./vue.esm-bundler-D4RNtN6S.js";import{p as K,N as L}from"./Popover-axeHrzq9.js";import{j as A,l as R,n as b,r as P,f as T,k as $}from"./light-DsB5ODev.js";import{k as H}from"./keysOf-HiGXOwLp.js";import{a as w,r as G}from"./resolve-slot-BBjw-So6.js";import{B}from"./Button-CF0RFvFf.js";import{N as J}from"./Icon-CrmNSR1a.js";import{W as Q}from"./Warning-Cd2ybYWr.js";import{u as N}from"./use-locale-CfrJhm3r.js";import{u as X}from"./use-css-vars-class-BoK1eXI1.js";import{k as Y}from"./keep-B1eBS8j0.js";import{o as Z}from"./omit-DbnPTcif.js";import{p as ee}from"./light-BfyaJdh5.js";import{c as S}from"./call-f2ri57Kd.js";import{_ as te}from"./CButton-CYpEF-bO.js";import"./index-CIE75m1q.js";import"./delegate-AmuGJuoF.js";import"./toString-Vm_cEZ4d.js";import"./Follower-DXtmSYJu.js";import"./use-memo-CglecHn5.js";import"./cssr-ChHp6ynC.js";import"./utils-Dy8q55w_.js";import"./icon-switch.cssr-CS-aOSlJ.js";import"./light-BUP7UYSb.js";import"./get-precise-event-target-DhO46Lpt.js";import"./index-Bg4fAuci.js";import"./index-L98eAIry.js";import"./Scrollbar-BbWWFAp8.js";import"./fade-in.cssr-DJOFltAV.js";import"./VResizeObserver-DllAtjZA.js";import"./use-rtl-DB_faxJd.js";import"./index-Xn0jilRV.js";import"./light-RknvjviJ.js";import"./get-first-slot-vnode-BHWfc99-.js";import"./flatten-B94A2huW.js";import"./use-merged-state-CUYpy2WA.js";import"./use-compitable-B7ANSQOo.js";import"./browser-DLIXj5nt.js";import"./is-browser-DqcmxZSF.js";import"./use-style-DC-6GAXR.js";import"./FadeInExpandTransition-LhRfDe22.js";import"./Loading-Ch5S3HjA.js";import"./use-form-item-BaX4b55j.js";import"./light-CaBpc4YN.js";import"./color-to-class-B0iQgAn2.js";import"./replaceable-DM1aDluB.js";import"./upperFirst-CgVWOQVP.js";import"./enUS-CW6P5ZC_.js";const V=A("n-popconfirm"),q={positiveText:String,negativeText:String,showIcon:{type:Boolean,default:!0},onPositiveClick:{type:Function,required:!0},onNegativeClick:{type:Function,required:!0}},_=H(q),oe=k({name:"NPopconfirmPanel",props:q,setup(t){const{localeRef:n}=N("Popconfirm"),{inlineThemeDisabled:s}=R(),{mergedClsPrefixRef:o,mergedThemeRef:l,props:e}=D(V),a=h(()=>{const{common:{cubicBezierEaseInOut:i},self:{fontSize:c,iconSize:u,iconColor:f}}=l.value;return{"--n-bezier":i,"--n-font-size":c,"--n-icon-size":u,"--n-icon-color":f}}),r=s?X("popconfirm-panel",void 0,a,e):void 0;return Object.assign(Object.assign({},N("Popconfirm")),{mergedClsPrefix:o,cssVars:s?void 0:a,localizedPositiveText:h(()=>t.positiveText||n.value.positiveText),localizedNegativeText:h(()=>t.negativeText||n.value.negativeText),positiveButtonProps:y(e,"positiveButtonProps"),negativeButtonProps:y(e,"negativeButtonProps"),handlePositiveClick(i){t.onPositiveClick(i)},handleNegativeClick(i){t.onNegativeClick(i)},themeClass:r==null?void 0:r.themeClass,onRender:r==null?void 0:r.onRender})},render(){var t;const{mergedClsPrefix:n,showIcon:s,$slots:o}=this,l=w(o.action,()=>this.negativeText===null&&this.positiveText===null?[]:[this.negativeText!==null&&p(B,Object.assign({size:"small",onClick:this.handleNegativeClick},this.negativeButtonProps),{default:()=>this.localizedNegativeText}),this.positiveText!==null&&p(B,Object.assign({size:"small",type:"primary",onClick:this.handlePositiveClick},this.positiveButtonProps),{default:()=>this.localizedPositiveText})]);return(t=this.onRender)===null||t===void 0||t.call(this),p("div",{class:[`${n}-popconfirm__panel`,this.themeClass],style:this.cssVars},G(o.default,e=>s||e?p("div",{class:`${n}-popconfirm__body`},s?p("div",{class:`${n}-popconfirm__icon`},w(o.icon,()=>[p(J,{clsPrefix:n},{default:()=>p(Q,null)})])):null,e):null),l?p("div",{class:[`${n}-popconfirm__action`]},l):null)}}),ie=b("popconfirm",[P("body",`
 font-size: var(--n-font-size);
 display: flex;
 align-items: center;
 flex-wrap: nowrap;
 position: relative;
 `,[P("icon",`
 display: flex;
 font-size: var(--n-icon-size);
 color: var(--n-icon-color);
 transition: color .3s var(--n-bezier);
 margin: 0 8px 0 0;
 `)]),P("action",`
 display: flex;
 justify-content: flex-end;
 `,[T("&:not(:first-child)","margin-top: 8px"),b("button",[T("&:not(:last-child)","margin-right: 8px;")])])]),ne=Object.assign(Object.assign(Object.assign({},$.props),K),{positiveText:String,negativeText:String,showIcon:{type:Boolean,default:!0},trigger:{type:String,default:"click"},positiveButtonProps:Object,negativeButtonProps:Object,onPositiveClick:Function,onNegativeClick:Function}),re=k({name:"Popconfirm",props:ne,slots:Object,__popover__:!0,setup(t){const{mergedClsPrefixRef:n}=R(),s=$("Popconfirm","-popconfirm",ie,ee,t,n),o=I(null);function l(r){var i;if(!(!((i=o.value)===null||i===void 0)&&i.getMergedShow()))return;const{onPositiveClick:c,"onUpdate:show":u}=t;Promise.resolve(c?c(r):!0).then(f=>{var m;f!==!1&&((m=o.value)===null||m===void 0||m.setShow(!1),u&&S(u,!1))})}function e(r){var i;if(!(!((i=o.value)===null||i===void 0)&&i.getMergedShow()))return;const{onNegativeClick:c,"onUpdate:show":u}=t;Promise.resolve(c?c(r):!0).then(f=>{var m;f!==!1&&((m=o.value)===null||m===void 0||m.setShow(!1),u&&S(u,!1))})}return F(V,{mergedThemeRef:s,mergedClsPrefixRef:n,props:t}),{setShow(r){var i;(i=o.value)===null||i===void 0||i.setShow(r)},syncPosition(){var r;(r=o.value)===null||r===void 0||r.syncPosition()},mergedTheme:s,popoverInstRef:o,handlePositiveClick:l,handleNegativeClick:e}},render(){const{$slots:t,$props:n,mergedTheme:s}=this;return p(L,Z(n,_,{theme:s.peers.Popover,themeOverrides:s.peerOverrides.Popover,internalExtraClass:["popconfirm"],ref:"popoverInstRef"}),{trigger:t.trigger,default:()=>{const o=Y(n,_);return p(oe,Object.assign(Object.assign({},o),{onPositiveClick:this.handlePositiveClick,onNegativeClick:this.handleNegativeClick}),t)}})}}),C=k({__name:"CPopconfirm",props:{trigger:{default:void 0},negativeButtonProps:{default:void 0},negativeText:{default:"Cancel"},positiveButtonProps:{default:void 0},positiveText:{default:"Confirm"},showIcon:{type:Boolean,default:!0}},emits:["positiveClick","negativeClick"],setup(t,{expose:n,emit:s}){const o=s,l=I(null);return n({setShow:e=>{var a;return(a=l.value)==null?void 0:a.setShow(e)},syncPosition:()=>{var e;return(e=l.value)==null?void 0:e.syncPosition()}}),(e,a)=>(W(),U(M(re),E({ref_key:"popconfirm",ref:l,class:"c-popconfirm"},e.$attrs,{trigger:e.trigger,"negative-button-props":e.negativeButtonProps,"negative-text":e.negativeText,"positive-button-props":e.positiveButtonProps,"positive-text":e.positiveText,"show-icon":e.showIcon,onPositiveClick:a[0]||(a[0]=()=>o("positiveClick")),onNegativeClick:a[1]||(a[1]=()=>o("negativeClick"))}),{trigger:d(()=>[v(e.$slots,"trigger")]),action:d(()=>[v(e.$slots,"action")]),icon:d(()=>[v(e.$slots,"icon")]),default:d(()=>[v(e.$slots,"default")]),_:3},16,["trigger","negative-button-props","negative-text","positive-button-props","positive-text","show-icon"]))}});C.__docgenInfo={exportName:"default",displayName:"CPopconfirm",description:"",tags:{},expose:[{name:"setShow",description:"Set show status in uncontrolled mode."},{name:"syncPosition",description:"Sync popconfirm position."}],props:[{name:"trigger",description:"Trigger type. Options are 'hover', 'click', 'focus' or 'manual'",required:!1,type:{name:"union",elements:[{name:'"hover"'},{name:'"click"'},{name:'"focus"'},{name:'"manual"'}]},defaultValue:{func:!1,value:"undefined"}},{name:"negativeButtonProps",description:"Cancel button's DOM props.",required:!1,type:{name:"ButtonProps"},defaultValue:{func:!1,value:"undefined"}},{name:"negativeText",description:"Cancel button text.",required:!1,type:{name:"union",elements:[{name:"string"},{name:"null"}]},defaultValue:{func:!1,value:"'Cancel'"}},{name:"positiveButtonProps",description:"Confirm button's DOM props.",required:!1,type:{name:"ButtonProps"},defaultValue:{func:!1,value:"undefined"}},{name:"positiveText",description:"Confirm button text.",required:!1,type:{name:"union",elements:[{name:"string"},{name:"null"}]},defaultValue:{func:!1,value:"'Confirm'"}},{name:"showIcon",description:"Whether to show the icon.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"true"}}],events:[{name:"positiveClick",description:"Callback for confirmation."},{name:"negativeClick",description:"Callback for cancel."}],slots:[{name:"default",description:"The content inside popconfirm."},{name:"trigger",description:"The element or component that triggers popconfirm."},{name:"action",description:"Custom action."},{name:"icon",description:"Popconfirm icon."}],sourceFiles:["/home/runner/work/npm-pew-pew/npm-pew-pew/src/components/CPopconfirm/CPopconfirm.vue"]};const tt={title:"Components/Popconfirm",component:C,tags:["autodocs"],decorators:[t=>({components:{story:t},template:'<div style="display: flex; justify-content: center;"><story/></div>'})],argTypes:{trigger:{options:["hover","click","focus","manual"]},negativeButtonProps:{control:!1},positiveButtonProps:{control:!1},negativeText:{control:"text"},positiveText:{control:"text"},default:{control:!1},action:{control:!1},icon:{control:!1},onPositiveClick:{table:{disable:!0}},onNegativeClick:{table:{disable:!0}}},parameters:{docs:{description:{component:"CPopconfirm is an element typically used to confirm an action before it is carried out. It appears as a small popup when a user attempts to perform a potentially irreversible or important action, such as deleting an item or submitting a form. This helps to prevent accidental or unintended actions by giving the user an opportunity to review their decision."}}},render:t=>({components:{CPopconfirm:C,CButton:te},setup(){return{args:t}},template:`
      <CPopconfirm
        :trigger="args.trigger"
        :negative-text="args.negativeText"
        :positive-text="args.positiveText"
        :show-icon="args.showIcon"
        :positive-button-props="args.positiveButtonProps"
        :negative-button-props="args.negativeButtonProps"
        @positive-click="args.onPositiveClick"
        @negative-click="args.onNegativeClick"
      >
        <template #trigger>
          <CButton
            size="small"
            type="info"
          >
            Delete User
          </CButton>
        </template>
        
        <p>
          Confirm user deletion?
        </p>
      </CPopconfirm>
    `})},g={args:{trigger:"hover",onPositiveClick:x(),onNegativeClick:x()}};var O,z,j;g.parameters={...g.parameters,docs:{...(O=g.parameters)==null?void 0:O.docs,source:{originalSource:`{
  args: {
    trigger: 'hover',
    onPositiveClick: fn(),
    onNegativeClick: fn()
  }
}`,...(j=(z=g.parameters)==null?void 0:z.docs)==null?void 0:j.source}}};const ot=["Default"];export{g as Default,ot as __namedExportsOrder,tt as default};
