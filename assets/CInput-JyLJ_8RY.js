import{d as y,r as w,c as i,v as b,D as g,y as u,z as V,A as q,x as C,m as l,H as I,I as z,B as r}from"./vue.esm-bundler-D4RNtN6S.js";import{C as d}from"./CIcon-BdIW6TD_.js";import{N as B}from"./Input-DEy15p9s.js";import{_ as T}from"./_plugin-vue_export-helper-DlAUqK2U.js";const f=y({__name:"CInput",props:{hasError:{type:Boolean,default:!1},id:{default:void 0},allowInput:{type:Function,default:void 0},autofocus:{type:Boolean,default:!1},autosize:{type:[Boolean,Object],default:!1},clearable:{type:Boolean,default:!1},countGraphemes:{type:Function,default:void 0},defaultValue:{default:null},disabled:{type:Boolean,default:!1},inputProps:{default:void 0},loading:{type:Boolean,default:void 0},maxlength:{default:void 0},minlength:{default:void 0},passivelyActivated:{type:Boolean,default:!1},placeholder:{default:void 0},readonly:{type:Boolean,default:!1},renderCount:{type:Function,default:void 0},round:{type:Boolean,default:!1},rows:{default:3},showCount:{type:Boolean,default:!1},showPasswordOn:{default:void 0},size:{default:"medium"},status:{default:void 0},type:{default:"text"},value:{default:void 0}},emits:["blur","change","clear","focus","input","update:value"],setup(p,{expose:m,emit:c}){const t=p,s=c,o=w(null);m({focus:()=>{var e;return(e=o.value)==null?void 0:e.focus()},blur:()=>{var e;return(e=o.value)==null?void 0:e.blur()},clear:()=>{var e;return(e=o.value)==null?void 0:e.clear()},select:()=>{var e;return(e=o.value)==null?void 0:e.select()},scrollTo:e=>{var n;return(n=o.value)==null?void 0:n.scrollTo(e)}});const h=i(()=>t.status?t.status:t.hasError?"error":void 0),v=i(()=>t.id?t.inputProps?{...t.inputProps,id:t.id}:{id:t.id}:t.inputProps);return(e,n)=>(C(),b(q(B),V({ref_key:"input",ref:o,class:"c-input"},e.$attrs,{"input-props":v.value,status:h.value,"allow-input":e.allowInput,autofocus:e.autofocus,autosize:e.autosize,clearable:e.clearable,"count-graphemes":e.countGraphemes,"default-value":e.defaultValue,disabled:e.disabled,loading:e.loading,maxlength:e.maxlength,minlength:e.minlength,"passively-activated":e.passivelyActivated,placeholder:e.placeholder,readonly:e.readonly,"render-count":e.renderCount,round:e.round,rows:e.rows,"show-count":e.showCount,"show-password-on":e.showPasswordOn,size:e.size,type:e.type,value:e.value,onBlur:n[0]||(n[0]=a=>{s("blur",a)}),onChange:n[1]||(n[1]=a=>{s("change",a)}),onClear:n[2]||(n[2]=()=>{s("clear")}),onFocus:n[3]||(n[3]=a=>{s("focus",a)}),onInput:n[4]||(n[4]=a=>{s("input",a)}),"onUpdate:value":n[5]||(n[5]=a=>{s("update:value",a)})}),g({"password-invisible-icon":u(()=>[l(e.$slots,"password-invisible-icon",{},()=>[r(d,{"is-inline":!0,name:"eye-off"})],!0)]),"password-visible-icon":u(()=>[l(e.$slots,"password-visible-icon",{},()=>[r(d,{"is-inline":!0,name:"eye"})],!0)]),_:2},[e.$slots["clear-icon"]?{name:"clear-icon",fn:u(()=>[l(e.$slots,"clear-icon",{},void 0,!0)]),key:"0"}:void 0,e.$slots.count?{name:"count",fn:u(a=>[l(e.$slots,"count",I(z(a)),void 0,!0)]),key:"1"}:void 0,e.$slots.prefix?{name:"prefix",fn:u(()=>[l(e.$slots,"prefix",{},void 0,!0)]),key:"2"}:void 0,e.$slots.separator?{name:"separator",fn:u(()=>[l(e.$slots,"separator",{},void 0,!0)]),key:"3"}:void 0,e.$slots.suffix?{name:"suffix",fn:u(()=>[l(e.$slots,"suffix",{},void 0,!0)]),key:"4"}:void 0]),1040,["input-props","status","allow-input","autofocus","autosize","clearable","count-graphemes","default-value","disabled","loading","maxlength","minlength","passively-activated","placeholder","readonly","render-count","round","rows","show-count","show-password-on","size","type","value"]))}}),S=T(f,[["__scopeId","data-v-d5445f4d"]]);f.__docgenInfo={exportName:"default",displayName:"CInput",description:"",tags:{},expose:[{name:"focus"},{name:"blur"},{name:"clear"},{name:"select"},{name:"scrollTo"}],props:[{name:"hasError",description:"Specifies if the input has error.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"id",description:"Specifies unique id of the input.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"allowInput",description:`Function to check the incoming value.
If it returns false, the input will not be accepted.`,required:!1,type:{name:"TSFunctionType"},defaultValue:{func:!1,value:"undefined"}},{name:"autofocus",description:"Whether to autofocus the input on mount.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"autosize",description:`Sizing property for when the input is of type textarea.
Can be a boolean or an object defining minRows and maxRows.`,required:!1,type:{name:"union",elements:[{name:"boolean"},{name:"{ minRows?: number; maxRows?: number }"}]},defaultValue:{func:!1,value:"false"}},{name:"clearable",description:"Whether the input can be cleared with a clear button.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"countGraphemes",description:`Function to count graphemes in the input value.
If set, native maxlength and minlength won't be used.`,required:!1,type:{name:"TSFunctionType"},defaultValue:{func:!1,value:"undefined"}},{name:"defaultValue",description:`Default value of the input when not manually set.
Can be a string, an array of strings, or null.`,required:!1,type:{name:"union",elements:[{name:"string"},{name:"tuple",elements:[{name:"string"},{name:"string"}]},{name:"null"}]},defaultValue:{func:!1,value:"null"}},{name:"disabled",description:"Whether to disable the input.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"inputProps",description:"DOM properties of the input element inside the component.",required:!1,type:{name:"union",elements:[{name:"InputHTMLAttributes"},{name:"TextareaHTMLAttributes"}]},defaultValue:{func:!1,value:"undefined"}},{name:"loading",description:`Set the loading state of the input.
If true or false, the input will reserve space for the loading indicator.`,required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"undefined"}},{name:"maxlength",description:"Maximum length of the input value.",required:!1,type:{name:"number"},defaultValue:{func:!1,value:"undefined"}},{name:"minlength",description:"Minimum length of the input value.",required:!1,type:{name:"number"},defaultValue:{func:!1,value:"undefined"}},{name:"passivelyActivated",description:"Whether to passively activate the input.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"placeholder",description:"Placeholder text for the input.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"readonly",description:"Set the input to readonly state.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"renderCount",description:"Render function for the word count, useful when displaying a custom word count.",required:!1,type:{name:"TSFunctionType"},defaultValue:{func:!1,value:"undefined"}},{name:"round",description:"Use a rounded style for the input.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"rows",description:"Number of rows for textarea inputs.",required:!1,type:{name:"number"},defaultValue:{func:!1,value:"3"}},{name:"showCount",description:"Whether to show the word count.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"showPasswordOn",description:"The event to show the password in password inputs.\nCan be `'click'` or `'mousedown'`.",required:!1,type:{name:"union",elements:[{name:'"click"'},{name:'"mousedown"'}]},defaultValue:{func:!1,value:"undefined"}},{name:"size",description:"Size of the input.\nCan be `'tiny'`, `'small'`, `'medium'`, or `'large'`.",required:!1,type:{name:"union",elements:[{name:'"tiny"'},{name:'"small"'},{name:'"medium"'},{name:'"large"'}]},defaultValue:{func:!1,value:"'medium'"}},{name:"status",description:"Validation status of the input.\nCan be `'success'`, `'warning'`, or `'error'`.",required:!1,type:{name:"union",elements:[{name:'"success"'},{name:'"warning"'},{name:'"error"'}]},defaultValue:{func:!1,value:"undefined"}},{name:"type",description:"The type of input.\nCan be `'text'`, `'password'`, or `'textarea'`.",required:!1,type:{name:"union",elements:[{name:'"text"'},{name:'"password"'},{name:'"textarea"'}]},defaultValue:{func:!1,value:"'text'"}},{name:"value",description:"Manually set the value of the input.",required:!1,type:{name:"union",elements:[{name:"string"},{name:"null"}]},defaultValue:{func:!1,value:"undefined"}}],events:[{name:"blur",type:{names:["FocusEvent"]},description:"Emitted when the input loses focus."},{name:"change",type:{names:["string"]},description:"Emitted when the native change event occurs."},{name:"clear",description:"Emitted when the input is cleared via the clear button."},{name:"focus",type:{names:["FocusEvent"]},description:"Emitted when the input receives focus."},{name:"input",type:{names:["string"]},description:"Emitted when the user inputs data into the input field."},{name:"update:value",type:{names:["string"]},description:"Emitted when the value of the input changes."}],slots:[{name:"clear-icon"},{name:"count",scoped:!0,bindings:[]},{name:"prefix"},{name:"separator"},{name:"suffix"},{name:"password-invisible-icon"},{name:"password-visible-icon"}],sourceFiles:["/home/runner/work/npm-pew-pew/npm-pew-pew/src/components/CInput/CInput.vue"]};export{S as C};
