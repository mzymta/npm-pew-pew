import{d as k,J as c,K as w,B as s,y as n,x as u,S as L,P as $,m as v,N as S,v as N,F as K,E as F,z as P,g as C,G as z,r as f,c as h}from"./vue.esm-bundler-D4RNtN6S.js";import{f as U}from"./index-BOnq2-IM.js";import{_ as b}from"./CButton-CYpEF-bO.js";import{_}from"./CCollapseTransition-Dr-u_SKe.js";import{C as I}from"./CIcon-BdIW6TD_.js";import{C as G}from"./CInput-JyLJ_8RY.js";import{_ as J}from"./CInputGroup-Bc1AbP-C.js";import{_ as M}from"./CTag-C5BDAZge.js";import{_ as O}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./Button-CF0RFvFf.js";import"./use-rtl-DB_faxJd.js";import"./light-DsB5ODev.js";import"./browser-DLIXj5nt.js";import"./is-browser-DqcmxZSF.js";import"./icon-switch.cssr-CS-aOSlJ.js";import"./resolve-slot-BBjw-So6.js";import"./use-style-DC-6GAXR.js";import"./FadeInExpandTransition-LhRfDe22.js";import"./Loading-Ch5S3HjA.js";import"./use-memo-CglecHn5.js";import"./use-form-item-BaX4b55j.js";import"./light-CaBpc4YN.js";import"./use-css-vars-class-BoK1eXI1.js";import"./color-to-class-B0iQgAn2.js";import"./call-f2ri57Kd.js";import"./fade-in-height-expand.cssr-BiZZSMP_.js";import"./light-C7NmY139.js";import"./Input-DEy15p9s.js";import"./Scrollbar-BbWWFAp8.js";import"./fade-in.cssr-DJOFltAV.js";import"./VResizeObserver-DllAtjZA.js";import"./index-Xn0jilRV.js";import"./delegate-AmuGJuoF.js";import"./light-RknvjviJ.js";import"./get-precise-event-target-DhO46Lpt.js";import"./Suffix-BjoWbega.js";import"./Icon-CrmNSR1a.js";import"./replaceable-DM1aDluB.js";import"./upperFirst-CgVWOQVP.js";import"./toString-Vm_cEZ4d.js";import"./light-3lQabVNk.js";import"./use-locale-CfrJhm3r.js";import"./enUS-CW6P5ZC_.js";import"./use-merged-state-CUYpy2WA.js";import"./Tag-C1qgvQqN.js";import"./Close-MwAQiULY.js";import"./Close-DtvJwW5M.js";import"./light-BLNTlX85.js";const R={class:"c-tag-input"},j={class:"c-tag-input__control"},H={class:"c-tag-input__errors","aria-live":"polite"},Q={key:0,class:"c-tag-input__tags-list"},q=k({__name:"CTagInput",props:{tags:{},tagString:{},id:{default:void 0},isValid:{type:Boolean,default:!0},isDisabled:{type:Boolean,default:!1},hasError:{type:Boolean,default:!1},clearButtonText:{default:"Clear All"},placeholder:{default:"Tag"},inputSize:{default:"large"},tagSize:{default:"medium"},tagType:{default:"default"}},emits:["add","remove","update:tags","update:tagString","clear","blur"],setup(T,{emit:o}){const a=T,t=o;function l(e){t("update:tagString",e)}function p(){t("add",a.tagString),!(a.isDisabled||a.hasError||!a.isValid)&&(t("update:tags",[...a.tags,a.tagString]),t("update:tagString",""))}function d(e){const i=a.tags[e];if(!i||a.isDisabled)return;const r=[...a.tags];r.splice(e,1),t("remove",i),t("update:tags",r)}function m(){a.isDisabled||(t("clear"),t("update:tags",[]))}return(e,i)=>(u(),c("div",R,[w("div",j,[s(J,{size:"large"},{default:n(()=>[s(G,{id:e.id,value:e.tagString,size:e.inputSize,clearable:"",disabled:e.isDisabled,"has-error":e.hasError,placeholder:"Tag","onUpdate:value":l,onKeydown:L($(p,["prevent"]),["enter"]),onBlur:i[0]||(i[0]=()=>t("blur"))},null,8,["id","value","size","disabled","has-error","onKeydown"]),s(b,{secondary:"",size:e.inputSize,disabled:e.isDisabled,type:e.hasError?"error":"primary",onClick:p,onBlur:i[1]||(i[1]=()=>t("blur"))},{icon:n(()=>[s(I,{name:"add","is-inline":!0})]),_:1},8,["size","disabled","type"])]),_:1}),s(_,{class:"c-tag-input__errors-wrapper",show:e.hasError&&e.$slots.errors!==void 0},{default:n(()=>[w("div",H,[v(e.$slots,"errors",{},void 0,!0)])]),_:3},8,["show"])]),s(_,{class:"c-tag-input__tags",show:e.tags.length>0},{default:n(()=>[e.tags.length>0?(u(),c("div",Q,[(u(!0),c(K,null,F(e.tags,(r,g)=>(u(),c("div",{key:r,class:"c-tag-input__tag-item"},[v(e.$slots,"tag",P({ref_for:!0},{tag:r,index:g,removeTag:d,isDisabled:e.isDisabled,tagType:e.tagType,tagSize:e.tagSize}),()=>[s(M,{closable:!e.isDisabled,type:e.tagType,size:e.tagSize,onClose:()=>d(g)},{default:n(()=>[C(z(r),1)]),_:2},1032,["closable","type","size","onClose"])],!0)]))),128)),e.isDisabled?S("",!0):(u(),N(b,{key:0,quaternary:"",size:"tiny",onClick:m},{icon:n(()=>[s(I,{name:"close","is-inline":!0})]),default:n(()=>[v(e.$slots,"clear-button-text",{},()=>[C(z(e.clearButtonText),1)],!0)]),_:3}))])):S("",!0)]),_:3},8,["show"])]))}}),B=O(q,[["__scopeId","data-v-e8d95211"]]);q.__docgenInfo={exportName:"default",displayName:"CTagInput",description:"",tags:{},props:[{name:"tags",description:"Array of tags that have been inputted by the user.",required:!0,type:{name:"Array",elements:[{name:"string"}]}},{name:"tagString",description:"The current input string for a new tag.",required:!0,type:{name:"string"}},{name:"id",description:"Unique identifier for the `TagInput` component.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"isValid",description:"Indicates whether the input is valid.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"isDisabled",description:"Indicates whether the `TagInput` component is disabled.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"hasError",description:"Indicates whether there is an error in the input.",required:!1,type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"clearButtonText",description:"The text displayed on the button used to clear all tags.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Clear All'"}},{name:"placeholder",description:"The placeholder text for the input field.",required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'Tag'"}},{name:"inputSize",description:"The size of the input field.\nCan be `'tiny'`, `'small'`, `'medium'`, or `'large'`.",required:!1,type:{name:"union",elements:[{name:'"tiny"'},{name:'"small"'},{name:'"medium"'},{name:'"large"'}]},defaultValue:{func:!1,value:"'large'"}},{name:"tagSize",description:"The size of the tags displayed.\nCan be `'tiny'`, `'small'`, `'medium'`, or `'large'`.",required:!1,type:{name:"union",elements:[{name:'"tiny"'},{name:'"small"'},{name:'"medium"'},{name:'"large"'}]},defaultValue:{func:!1,value:"'medium'"}},{name:"tagType",description:"The type of the tags displayed.\nCan be `'default'`, `'info'`, `'warning'`, `'error'`, `'success'`, or `'primary'`.",required:!1,type:{name:"union",elements:[{name:'"default"'},{name:'"info"'},{name:'"warning"'},{name:'"error"'},{name:'"success"'},{name:'"primary"'}]},defaultValue:{func:!1,value:"'default'"}}],events:[{name:"add",type:{names:["string"]},description:"Emitted when a new tag is added."},{name:"remove",type:{names:["string"]},description:"Emitted when an existing tag is removed."},{name:"update:tags",type:{names:["Array"],elements:[{name:"string"}]},description:"Emitted when the list of tags is updated."},{name:"update:tagString",type:{names:["string"]},description:"Emitted when the input string for a tag is updated."},{name:"clear",description:"Emitted when all tags are cleared."},{name:"blur",description:"Emitted when the input field loses focus."}],slots:[{name:"errors"},{name:"tag",scoped:!0,bindings:[{name:"tag",title:"binding"},{name:"index",title:"binding"},{name:"removeTag",title:"binding"},{name:"isDisabled",title:"binding"},{name:"tagType",title:"binding"},{name:"tagSize",title:"binding"}]},{name:"clear-button-text"}],sourceFiles:["/home/runner/work/npm-pew-pew/npm-pew-pew/src/components/CTagInput/CTagInput.vue"]};const Me={title:"Components/TagInput",component:B,tags:["autodocs"],argTypes:{errors:{control:!1,description:"The errors to show below the input."},tag:{control:!1,description:"The tag can be rendered differently"},hasError:{control:!1},isValid:{control:!1},clearButtonText:{description:"Can be provided as slot or via prop. Slot wins."},"clear-button-text":{control:!1},inputSize:{options:["tiny","small","medium","large"]},tagSize:{options:["tiny","small","medium","large"]},tagType:{options:["default","info","warning","error","success","primary"]}},parameters:{docs:{description:{component:"The component allows to input and manage a list of tags. It provides an intuitive interface with features like tag addition, removal, and clearing, along with customizable input and tag sizes. This component is ideal for scenarios where users need to manage multiple tags or keywords efficiently."}}},render:T=>({components:{CTagInput:B,CButton:b},setup(){const o=f(""),a=f(!1),t=f(!1),l=f([]),p=U(),d=h(()=>o.value.length<3),m=h(()=>l.value.includes(o.value)),e=h(()=>l.value.length<3),i=h(()=>t.value&&(d.value||m.value)||a.value&&e.value);function r(){t.value=!1,a.value=!0}function g(){a.value=!0,t.value=!0}function A(){a.value=!1,t.value=!1}return{args:T,tagString:o,tags:l,action:p,isLessThanThreeSymbols:d,isAlreadyInTheList:m,isLessThanThreeTags:e,hasError:i,isAddTouched:t,resetTouched:A,submit:r,addTag:g}},template:`
      <CTagInput
        id="default-tag-input"
        v-model:tag-string="tagString"
        v-model:tags="tags"
        :input-size="args.medium"
        :has-error="hasError"
        :is-valid="!isLessThanThreeSymbols && !isAlreadyInTheList"
        :clear-button-text="args.clearButtonText"
        @update:tag-string="() => { action(); resetTouched(); }"
        @update:tags="action"
        @add="() => { action(); addTag(); }"
        @remove="() => { action(); resetTouched(); }"
        @blur="() => { action(); resetTouched(); }"
        @clear="() => { action(); resetTouched(); }"
      >
        <template #errors>
          <template v-if="isLessThanThreeTags && !isAddTouched">Please provide at least 3 tags.</template>
          <template v-else-if="isLessThanThreeSymbols">Tag should be at least 3 symbols long.</template>
          <template v-else-if="isAlreadyInTheList">Tag is already in the list.</template>
        </template>
      </CTagInput>
      
      <CButton
        style="margin-top: 24px;"
        @click="submit"
      >Submit</CButton>
    `})},y={args:{clearButtonText:"Clear All"}};var E,V,D;y.parameters={...y.parameters,docs:{...(E=y.parameters)==null?void 0:E.docs,source:{originalSource:`{
  args: {
    clearButtonText: 'Clear All'
  }
}`,...(D=(V=y.parameters)==null?void 0:V.docs)==null?void 0:D.source}}};const Oe=["Default"];export{y as Default,Oe as __namedExportsOrder,Me as default};
